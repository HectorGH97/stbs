// Generated by view binder compiler. Do not edit!
package com.example.stbs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.stbs.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMessageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout myMessageLayout;

  @NonNull
  public final TextView myMessageTextView;

  @NonNull
  public final ConstraintLayout otherMessageLayout;

  @NonNull
  public final TextView othersMessageTextView;

  private ItemMessageBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout myMessageLayout, @NonNull TextView myMessageTextView,
      @NonNull ConstraintLayout otherMessageLayout, @NonNull TextView othersMessageTextView) {
    this.rootView = rootView;
    this.myMessageLayout = myMessageLayout;
    this.myMessageTextView = myMessageTextView;
    this.otherMessageLayout = otherMessageLayout;
    this.othersMessageTextView = othersMessageTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMessageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.myMessageLayout;
      ConstraintLayout myMessageLayout = rootView.findViewById(id);
      if (myMessageLayout == null) {
        break missingId;
      }

      id = R.id.myMessageTextView;
      TextView myMessageTextView = rootView.findViewById(id);
      if (myMessageTextView == null) {
        break missingId;
      }

      id = R.id.otherMessageLayout;
      ConstraintLayout otherMessageLayout = rootView.findViewById(id);
      if (otherMessageLayout == null) {
        break missingId;
      }

      id = R.id.othersMessageTextView;
      TextView othersMessageTextView = rootView.findViewById(id);
      if (othersMessageTextView == null) {
        break missingId;
      }

      return new ItemMessageBinding((ConstraintLayout) rootView, myMessageLayout, myMessageTextView,
          otherMessageLayout, othersMessageTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
